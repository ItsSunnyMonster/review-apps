name: 'Deploy review apps to gh-pages'
description: |
  Automatically deploy static apps to gh-pages, so you're able to easily QA it
inputs:
  gh-pages-source-branch:  # id of input
    description: 'The branch you configured in github to be the source for gh-pages. defaults to "gh-pages run"'
    default: 'gh-pages'
  public-assets-dir:  # id of input
    description: 'The directory where you build artifacts will live'
    default: 'dist'
  output-dir:
    description: |
      'Dir is related to URL path in github pages.
      If you want something like: https://githubname.github.io/repo/storybooks/branch-name, pass string "storybook"'
    default: 'review-apps'
runs:
  using: "composite"
  steps:
    - name: 'Configure git author'
      run: |
        git config --global user.name ${{github.event.pusher.name}}
        git config --global user.email ${{github.event.pusher.email}}
        git config pull.rebase true
      shell: bash
    - name: 'Commit udpated review app'
      run: |
        BRANCH_NAME=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }') && echo "Deu bom A"
        mv ${{inputs.public-assets-dir}} .tmp && echo "Deu bom b"
        git fetch
        git checkout ${{inputs.gh-pages-source-branch}} && echo "Deu bom c"
        mkdir ${{inputs.output-dir}} || echo "Creating dir '${{inputs.output-dir}}' can fail safely"
        rm -r ${{inputs.output-dir}}/$BRANCH_NAME && echo "Deu bom d"
        mv .tmp ${{inputs.output-dir}}/$BRANCH_NAME && echo "Deu bom e"
        git status && echo "Deu bom f"
        echo "--------------------"
        git status | grep "${{inputs.output-dir}}" | echo "hell yeah"
        echo "THIS BREKAKING?"
        git status | grep "${{inputs.output-dir}}"
        if [ #? -eq 0 ]; then
          echo "GREP?"
          git add ${{inputs.output-dir}}/$BRANCH_NAME
          git commit -m "[skip ci]  ref to ${{github.event.head_commit.id}}"
        fi
        echo "Finish"
      shell: bash
    - name: 'Try to push with updated review app'
      run: |
        echo "-----------"
        counter=0
        function retry() {
          echo "Retry to push until succeeds, just in case there another push just happened"
          git pull origin ${{inputs.gh-pages-source-branch}}
          git push origin ${{inputs.gh-pages-source-branch}}
          if [ $? -eq 0 ]; then
            if [ $counter -lt 5 ]; then
              retry
              ((counter=counter+1))
            fi
          fi
        }
        retry
      shell: bash
